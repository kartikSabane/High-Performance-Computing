Execution Step:-
g++ -Fopenmp min_max_sum.cpp -o min_max_sum

./min_max_sum


Code:-
#include<iostream>

#include<omp.h>



using namespace std;



int minval(int arr[],int n){

	int minval=arr[0];

	

	#pragma omp parallel for reduction(min:minval)

	for(int i=0;i<n;i++){

		if(arr[i]<minval){

			minval=arr[i];

		}

	}

	

	return minval;

}



int maxval(int arr[],int n){

	int maxval=arr[0];

	

	#pragma omp parallel for reduction(max:maxval)

	for(int i=0;i<n;i++){

		if(arr[i]>maxval){

			maxval=arr[i];

		}

	}

	

	return maxval;

}



int sum(int arr[],int n){

	int sum=0;

	

	#pragma omp parallel for reduction(+:sum)

	for(int i=0;i<n;i++){

		sum=sum+arr[i];

	}

	

	return sum;

}



int average(int arr[],int n){

	return (double) sum(arr,n)/n;



}



int main(){

	int n=5;

	int arr[]={50,40,30,10,20};

	

	cout<<"Minimum value is:"<<minval(arr,n)<<endl;

	cout<<"Maximum value is:"<<maxval(arr,n)<<endl;

	cout<<"sum of array is:"<<sum(arr,n)<<endl;

	cout<<"Average of array is :"<<average(arr,n)<<endl;

	

	return 0;





}